#!/bin/bash

__infi__="""
# Name: Neovim git manager
# Version: 1.0.1
# Description: Brief purpose description
# Usage: $(basename "$0") [options] [arguments]
# Options:
#   -h --help    Show this help
#   -v --version Show version
"""
set -euo pipefail

setup() {
    # Set Aliases for neovim_git
    touch $HOME/.profile
    mod_script $HOME/.profile --add_var ng "\"neovim_git\""
    mod_script $HOME/.profile --mod_type ng alias
    source $HOME/.profile
}

help() {
    echo "$__infi__"
    echo "$(git -h)"
    exit 0
}
version() {
    echo "Version: $(grep '^# Version:' "$0" | cut -d' ' -f3)"
    echo "$(git -v)"
    exit 0
}

# Check for required tools
check_required_tools() {
    local REQUIRED_CMDS=("sh")
    for cmd in "${REQUIRED_CMDS[@]}"; do
        if ! command -v "$cmd" &> /dev/null; then
            echo "Error: $cmd is required but not installed" >&2
            exit 1
        fi
    done    
}

# Only execute if the script is run directly (not sourced)
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    check_required_tools
fi

# Parse arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help) help ;;
        -v|--version) version ;;
        -*) echo "Unknown option: $1" >&2; exit 1 ;;
        *) break ;;
    esac
    shift
done

# Only execute if the script is run directly (not sourced)
# Main script content here
if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then

    _NEOVIM_CONFIG_DIR="${HOME}/.config/nvim"
    # If neovim config wirectory does not exist, create it
    if [ ! -d "$_NEOVIM_CONFIG_DIR" ]; then
        mkdir -p "$_NEOVIM_CONFIG_DIR"
    fi


    cd "$_NEOVIM_CONFIG_DIR"
    git "$@"
fi